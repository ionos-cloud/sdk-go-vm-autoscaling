/*
 * VM Auto Scaling service (CloudAPI)
 *
 * VM Auto Scaling service enables IONOS clients to horizontally scale the number of VM instances, based on configured rules. Use Auto Scaling to ensure you will have a sufficient number of instances to handle your application loads at all times.  Create an Auto Scaling group that contains the server instances; Auto Scaling service will ensure that the number of instances in the group is always within these limits.  When target replica count is specified, Auto Scaling will maintain the set number on instances.  When scaling policies are specified, Auto Scaling will create or delete instances based on the demands of your applications. For each policy, specified scale-in and scale-out actions are performed whenever the corresponding thresholds are met.
 *
 * API version: 1.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud_vm_autoscaling

import (
	"encoding/json"
)

// ReplicaVolumeGet struct for ReplicaVolumeGet
type ReplicaVolumeGet struct {
	// The image installed on the volume. Only the UUID of the image is presently supported.
	Image *string `json:"image"`
	// Name of the replica volume.
	Name *string `json:"name"`
	// User-defined size for this replica volume in GB.
	Size *int32 `json:"size"`
	// Ssh keys that has access to the volume.
	SshKeys *[]string     `json:"sshKeys,omitempty"`
	Type    *VolumeHwType `json:"type"`
	// user-data (Cloud Init) for this replica volume.
	UserData *string  `json:"userData,omitempty"`
	Bus      *BusType `json:"bus,omitempty"`
}

// NewReplicaVolumeGet instantiates a new ReplicaVolumeGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaVolumeGet(image string, name string, size int32, type_ VolumeHwType) *ReplicaVolumeGet {
	this := ReplicaVolumeGet{}

	this.Image = &image

	this.Name = &name

	this.Size = &size

	this.Type = &type_

	return &this
}

// NewReplicaVolumeGetWithDefaults instantiates a new ReplicaVolumeGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaVolumeGetWithDefaults() *ReplicaVolumeGet {
	this := ReplicaVolumeGet{}
	return &this
}

// GetImage returns the Image field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaVolumeGet) GetImage() *string {
	if o == nil {
		return nil
	}

	return o.Image

}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Image, true
}

// SetImage sets field value
func (o *ReplicaVolumeGet) SetImage(v string) {

	o.Image = &v

}

// HasImage returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaVolumeGet) GetName() *string {
	if o == nil {
		return nil
	}

	return o.Name

}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Name, true
}

// SetName sets field value
func (o *ReplicaVolumeGet) SetName(v string) {

	o.Name = &v

}

// HasName returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// GetSize returns the Size field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ReplicaVolumeGet) GetSize() *int32 {
	if o == nil {
		return nil
	}

	return o.Size

}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}

	return o.Size, true
}

// SetSize sets field value
func (o *ReplicaVolumeGet) SetSize(v int32) {

	o.Size = &v

}

// HasSize returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// GetSshKeys returns the SshKeys field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ReplicaVolumeGet) GetSshKeys() *[]string {
	if o == nil {
		return nil
	}

	return o.SshKeys

}

// GetSshKeysOk returns a tuple with the SshKeys field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetSshKeysOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}

	return o.SshKeys, true
}

// SetSshKeys sets field value
func (o *ReplicaVolumeGet) SetSshKeys(v []string) {

	o.SshKeys = &v

}

// HasSshKeys returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasSshKeys() bool {
	if o != nil && o.SshKeys != nil {
		return true
	}

	return false
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for VolumeHwType will be returned
func (o *ReplicaVolumeGet) GetType() *VolumeHwType {
	if o == nil {
		return nil
	}

	return o.Type

}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetTypeOk() (*VolumeHwType, bool) {
	if o == nil {
		return nil, false
	}

	return o.Type, true
}

// SetType sets field value
func (o *ReplicaVolumeGet) SetType(v VolumeHwType) {

	o.Type = &v

}

// HasType returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// GetUserData returns the UserData field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaVolumeGet) GetUserData() *string {
	if o == nil {
		return nil
	}

	return o.UserData

}

// GetUserDataOk returns a tuple with the UserData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetUserDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.UserData, true
}

// SetUserData sets field value
func (o *ReplicaVolumeGet) SetUserData(v string) {

	o.UserData = &v

}

// HasUserData returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasUserData() bool {
	if o != nil && o.UserData != nil {
		return true
	}

	return false
}

// GetBus returns the Bus field value
// If the value is explicit nil, the zero value for BusType will be returned
func (o *ReplicaVolumeGet) GetBus() *BusType {
	if o == nil {
		return nil
	}

	return o.Bus

}

// GetBusOk returns a tuple with the Bus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaVolumeGet) GetBusOk() (*BusType, bool) {
	if o == nil {
		return nil, false
	}

	return o.Bus, true
}

// SetBus sets field value
func (o *ReplicaVolumeGet) SetBus(v BusType) {

	o.Bus = &v

}

// HasBus returns a boolean if a field has been set.
func (o *ReplicaVolumeGet) HasBus() bool {
	if o != nil && o.Bus != nil {
		return true
	}

	return false
}

func (o ReplicaVolumeGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}

	if o.Name != nil {
		toSerialize["name"] = o.Name
	}

	if o.Size != nil {
		toSerialize["size"] = o.Size
	}

	if o.SshKeys != nil {
		toSerialize["sshKeys"] = o.SshKeys
	}

	if o.Type != nil {
		toSerialize["type"] = o.Type
	}

	if o.UserData != nil {
		toSerialize["userData"] = o.UserData
	}

	if o.Bus != nil {
		toSerialize["bus"] = o.Bus
	}

	return json.Marshal(toSerialize)
}

type NullableReplicaVolumeGet struct {
	value *ReplicaVolumeGet
	isSet bool
}

func (v NullableReplicaVolumeGet) Get() *ReplicaVolumeGet {
	return v.value
}

func (v *NullableReplicaVolumeGet) Set(val *ReplicaVolumeGet) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaVolumeGet) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaVolumeGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaVolumeGet(val *ReplicaVolumeGet) *NullableReplicaVolumeGet {
	return &NullableReplicaVolumeGet{value: val, isSet: true}
}

func (v NullableReplicaVolumeGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaVolumeGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
